name: Auto-merge

on:
  pull_request:
    types: [labeled, synchronize]
  check_suite:
    types: [completed]

permissions:
  contents: write
  pull-requests: write

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.labels.*.name, 'auto-merge-ok')
    
    steps:
    - name: Cancel if label removed
      if: github.event.action == 'unlabeled' && github.event.label.name == 'auto-merge-ok'
      run: |
        echo "auto-merge-ok label removed, cancelling workflow"
        exit 1
    
    - name: Wait for cooldown
      if: github.event.action == 'labeled'
      run: |
        echo "Starting 30-minute cooldown period..."
        echo "PR will be auto-merged at $(date -d '+30 minutes')"
        sleep 1800
    
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Check PR size
      uses: actions/github-script@v6
      with:
        script: |
          const pr = context.payload.pull_request;
          const { data: prData } = await github.rest.pulls.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: pr.number
          });
          
          if (prData.additions > 200) {
            core.setFailed(`PR has ${prData.additions} additions, exceeds 200 LOC limit`);
          }
          
          // Also check if CI passed
          const { data: checks } = await github.rest.checks.listForRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: pr.head.sha
          });
          
          const ciCheck = checks.check_runs.find(c => c.name === 'test');
          if (!ciCheck || ciCheck.conclusion !== 'success') {
            core.setFailed('CI checks have not passed');
          }
    
    - name: Auto-merge
      uses: pascalgn/merge-action@v0.15.5
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        method: squash